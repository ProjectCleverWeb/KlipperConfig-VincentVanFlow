[gcode_macro PRESENT_PRINT]
description:
	Move the tool head to a corner so it is out of the way. (Back left) Works
	similar to G27, but instead only tries to raise Z by Z_BUFFER and will HOME
	if not already homed.
gcode:
	; Start Macro
	_MACRO_START NAME="PRESENT_PRINT"
	
	; Config defaults
	{% set X_PARK     = 20 %}
	{% set Y_PARK     = printer.toolhead.axis_maximum.y - 20 %}
	{% set Z_BUFFER   = 5 %}
	{% set XY_FSPEED  = 2400 %}
	{% set Z_FSPEED   = 600 %}
	{% set SAFE_Z_MAX = printer.toolhead.axis_maximum.z %}
	
	; Import vars
	{% if 'save_variables' in printer %}
		{% set vars = printer.save_variables.variables %}
		{% if 'x_park' in vars %}
			{% set X_PARK = vars.x_park %}
		{% endif %}
		{% if 'y_park' in vars %}
			{% set Y_PARK = vars.y_park %}
		{% endif %}
		{% if 'z_buffer' in vars %}
			{% set Z_BUFFER = vars.z_buffer %}
		{% endif %}
		{% if 'xy_fspeed' in vars %}
			{% set XY_FSPEED = vars.xy_fspeed %}
		{% endif %}
		{% if 'z_fspeed' in vars %}
			{% set Z_FSPEED = vars.z_fspeed %}
		{% endif %}
		{% if 'safe_z_max' in vars %}
			{% set SAFE_Z_MAX = vars.safe_z_max %}
		{% endif %}
	{% endif %}
	
	; Params
	{% set X_PARK    = params.X_PARK|default(X_PARK)|float %}
	{% set Y_PARK    = params.Y_PARK|default(Y_PARK)|float %}
	{% set Z_BUFFER  = params.Z_BUFFER|default(Z_BUFFER)|float %}
	{% set XY_FSPEED = params.XY_FSPEED|default(XY_FSPEED)|int %}
	{% set Z_FSPEED  = params.Z_FSPEED|default(Z_FSPEED)|int %}
	
	; Run macro
	HOME
	
	{% if printer.toolhead.position.z + Z_BUFFER <= SAFE_Z_MAX %}
		; We have room to raise by Z_BUFFER without going above SAFE_Z_MAX
		G91 ; Relative positioning
		G1 Z{Z_BUFFER} F{Z_FSPEED}
		G90 ; Absolute positioning
		G1 X{X_PARK} Y{Y_PARK} F{XY_FSPEED}
	{% else %}
		; We are already at/near SAFE_Z_MAX, so just try to raise to SAFE_Z_MAX
		G90 ; Absolute positioning
		G1 Z{SAFE_Z_MAX} F{Z_FSPEED}
		G1 X{X_PARK} Y{Y_PARK} F{XY_FSPEED}
	{% endif %}
	
	; End Macro
	_MACRO_END NAME="PRESENT_PRINT"
